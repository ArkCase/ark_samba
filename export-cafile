#!/usr/bin/python3
import http.server
import logging
import os
import socketserver
import subprocess

logging.basicConfig(level=logging.INFO, format = '%(asctime)s - %(levelname)s - %(message)s')

GET_PARAM_COMMAND = [ "/usr/bin/testparm", "--skip-logic-checks", "--suppress-prompt", "--section-name=global", "--parameter-name" ]

PARAM_PRIVATE_DIR = "private directory"
PARAM_CA_FILE = "tls cafile"

ENCODING = "US-ASCII"

def get_samba_param(param):
	cmd = GET_PARAM_COMMAND + [ param ]
	result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, encoding="UTF-8")
	if result.returncode != 0:
		logging.error(f"Failed to fetch the Samba parameter '{param}' (rc={result.returncode}): {result.stderr} / {result.stdout}")
		return None
	return result.stdout.strip()

def get_ca_file():
	cafile = get_samba_param(PARAM_CA_FILE)
	if cafile is None:
		logging.error("Failed to identify the CA file in use")
		return None

	if not cafile.startswith("/"):
		private_dir = get_samba_param(PARAM_PRIVATE_DIR)
		if private_dir is None:
			logging.error("Failed to identify the Samba private directory")
			return None
		cafile = private_dir + "/" + cafile

	if not os.path.exists(cafile):
		logging.error(f"The CA file path [{cafile}] does not exist")
		return None

	if not os.path.isfile(cafile):
		logging.error(f"The CA file path [{cafile}] is not a regular file")
		return None

	return cafile

class CAFileHandler(http.server.BaseHTTPRequestHandler):
	def do_GET(self):
		cafile = get_ca_file()

		if cafile is None:
			self.send_error(404)
			return

		# Set the result
		self.send_response(200)
		self.send_header("Content-Type", f"application/x-x509-ca-cert;charset={ENCODING}")
		self.end_headers()

		# Write out the file contents
		with open(cafile, "rt") as ca:
			self.wfile.write(ca.read().encode(ENCODING))

# We can do this b/c we run as root
PORT = 80

try:
	http.server.HTTPServer(("", PORT), CAFileHandler).serve_forever()
except KeyboardInterrupt:
	logging.info("Exiting")
finally:
	exit(0)
